plugins {
    id 'java-library'
    id 'groovy'
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
    id 'com.vanniktech.maven.publish' version '0.28.0'
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    compileOnly project(':compileOnly')
    api 'com.fasterxml.jackson.core:jackson-databind:2.17.0'
    api 'jakarta.inject:jakarta.inject-api:2.0.0'
    api 'io.lenra:lenra-internal-api-client:1.0.0'

    testImplementation project(':compileOnly')
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.codehaus.groovy:groovy-all:2.4.15'
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    def lombok = 'org.projectlombok:lombok:1.18.30'
    compileOnly lombok
	annotationProcessor lombok
	testCompileOnly lombok
	testAnnotationProcessor lombok

    def googleAutoService = 'com.google.auto.service:auto-service:1.1.1'
    compileOnly googleAutoService
	annotationProcessor googleAutoService
	testCompileOnly googleAutoService
	testAnnotationProcessor googleAutoService
}

group = 'io.lenra'
java.sourceCompatibility = JavaVersion.VERSION_17

var lenraApiBuildDir = "${buildDir}/generated-sources/lenraApi"

task generateApiClasses(type:Exec) {
  commandLine 'bun', new File(rootDir, 'scripts/generateApiClasses.ts'), new File(rootDir, 'api'), project.sourceSets.main.java.srcDirs[0], lenraApiBuildDir

  ext.output = {
    return standardOutput.toString()
  }
}

sourceSets {
   main {
      java {
         srcDir lenraApiBuildDir
      }
   }
}

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'

    dependsOn tasks.generateApiClasses
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
