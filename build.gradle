plugins {
    id 'java-library'
    id 'groovy'
    id 'org.jetbrains.kotlin.jvm' version '1.9.22'
    id 'maven-publish'
}

repositories {
    mavenLocal()
    mavenCentral()
    maven {
        url = uri('https://jitpack.io')
    }
}

dependencies {
    api 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    api 'jakarta.inject:jakarta.inject-api:2.0.0'
    api 'com.github.lenra-io:internal-api-client-lib-java:fix-1234-SNAPSHOT'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.codehaus.groovy:groovy-all:2.4.15'
    testImplementation 'org.jetbrains.kotlin:kotlin-test'

    compileOnly 'org.projectlombok:lombok:1.18.30'
	annotationProcessor 'org.projectlombok:lombok:1.18.30'
	
	testCompileOnly 'org.projectlombok:lombok:1.18.30'
	testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'
}

group = 'io.lenra'
version = '1.0.0-SNAPSHOT'
description = 'app'
java.sourceCompatibility = JavaVersion.VERSION_17

publishing {
    publications {
        maven(MavenPublication) {
            groupId project.group
            artifactId 'app'
            version project.version

            from components.java
        }
    }
}

var lenraApiBuildDir = "${buildDir}/generated-sources/lenraApi"

task generateApiClasses(type:Exec) {
  commandLine 'bun', 'scripts/generateApiClasses.ts', lenraApiBuildDir

  ext.output = {
    return standardOutput.toString()
  }
}

sourceSets {
   main {
      java {
         srcDir lenraApiBuildDir
      }
   }
}


tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'

    dependsOn tasks.generateApiClasses
}

tasks.withType(Javadoc) {
    options.encoding = 'UTF-8'
}
